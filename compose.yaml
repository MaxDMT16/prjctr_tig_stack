version: '3.6'
services:
  # proxy:
  #   image: nginx
  #   volumes:
  #     - type: bind
  #       source: ./nginx/nginx.conf
  #       target: /etc/nginx/conf.d/default.conf
  #       read_only: true
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - backend

  # backend:
  #   build:
  #     context: backend
  #     target: builder

  telegraf:
    image: telegraf:1.18-alpine
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      
  mongo:
    image: mongo
    restart: always
    env_file: configuration.env
    ports:
      - '127.0.0.1:27017:27017'

  elasticsearch:
    image: elasticsearch:7.16.1
    container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3



volumes:
  grafana_data: {}
  influxdb_data: {}
